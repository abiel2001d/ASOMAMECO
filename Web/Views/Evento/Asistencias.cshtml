@model Infraestructura.Model.Evento
@{
    ViewBag.Title = "Asistencias";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var asistencias = ViewBag.Asistencias as IEnumerable<Infraestructura.Model.Asistencia>;
    var invitaciones = ViewBag.Invitaciones as IEnumerable<Infraestructura.Model.Invitacion>;
    var presentes = asistencias.Count(a => a.Presente == "Presente");
    var ausentes = invitaciones.Count() - presentes;
    var totalAsistencias = asistencias.Where(a => a.Evento != null).ToList().Count();
    var totalInvitaciones = invitaciones.Count();
}

<div class="container">
    <p class="mt-3">
        <div id="spinner-container" style="display: none;">
            <div id="spinner" class="spinner-border spinner-border-sm text-primary" role="status">
                <span class="sr-only">Loading...</span>
            </div>
            <span id="sending-text">Actualizando Asistencia</span>
        </div>
    </p>


    <div class="card mb-3">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5>Evento: @Model.Nombre_Evento</h5>
        </div>
        <div class="card-body">
            <p><strong>Fecha & Hora:</strong> @Model.Fecha_Evento.ToString("dd/MMMM/yyyy hh:mm tt")</p>
            <p><strong>Lugar:</strong> @Model.Lugar</p>
            <p><strong>Descripción:</strong> @Model.Descripcion</p>
        </div>
    </div>


    <div class="d-flex mb-3">
        <a href="@Url.Action("Index", "Evento")" class="btn btn-secondary" style="margin-right:10px">Volver a Eventos</a>
        @if (totalAsistencias != totalInvitaciones)
        {
            <button class="btn btn-primary" id="concluir-asistencia-button">Concluir Asistencia</button>
        }
    </div>



    <div class="card mb-3">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5>Lista de Asistencia</h5>
            <div class="status-indicators">
                <span class="status-box status-green">Presentes: @presentes</span>
                <span class="status-box status-gray">Ausentes: @ausentes</span>
            </div>
        </div>
        <div class="card-body">
            <!-- Search Inputs -->
            <div class="row mb-3">
                <div class="col-md-4">
                    <input type="text" id="search-cedula" class="form-control" placeholder="Buscar por Cédula">
                </div>
                <div class="col-md-4">
                    <input type="text" id="search-nombre" class="form-control" placeholder="Buscar por Nombre">
                </div>
                <div class="col-md-4">
                    <select id="search-estado" class="form-control">
                        <option value="">Todos</option>
                        <option value="Presente">Presente</option>
                        <option value="Ausente">Ausente</option>
                    </select>
                </div>
            </div>

            <table class="table table-hover table-sm">
                <thead class="thead-light">
                    <tr>
                        <th>Cédula</th>
                        <th>Nombre</th>
                        <th>Respuesta Invitación</th>
                        <th class="text-center">Hora de Marca</th>
                        <th class="text-center">Marcar</th>
                    </tr>
                </thead>
                <tbody id="asistencias-table-body">
                    @foreach (var invitacion in invitaciones)
                    {
                        var asistencia = asistencias.FirstOrDefault(a => a.ID_Usuario == invitacion.ID_Usuario);
                        <tr>
                            <td>@invitacion.Usuario.Cedula</td>
                            <td>@invitacion.Usuario.Nombre</td>
                            <td>
                                <span class="invitation-box @(invitacion.Confirmado == "Sin Respuesta" ? "status-gray" : invitacion.Confirmado == "Rechazada" ? "status-red" : "status-green")">
                                    @invitacion.Confirmado
                                </span>
                            </td>
                            <td class="text-center">
                                @(asistencia != null && asistencia.Presente == "Presente" ? DateTime.Today.Add(asistencia.Hora_Asistencia).ToString("hh:mm tt") : "-")
                            </td>
                            <td class="text-center">
                                @if (asistencia != null && asistencia.Presente == "Presente")
                                {
                                    <span class="status-box status-green">Presente</span>
                                }
                                else if (totalAsistencias != totalInvitaciones)
                                {
                                    <button class="btn btn-outline-primary mark-attendance-button"
                                            data-usuario="@invitacion.ID_Usuario"
                                            data-evento="@invitacion.ID_Evento">
                                        <i class="fas fa-user-check"></i>
                                    </button>
                                }
                                else
                                {
                                    <span class="status-box status-gray">Ausente</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var buttons = document.querySelectorAll('.mark-attendance-button');
        buttons.forEach(function (button) {
            button.addEventListener('click', function () {
                var usuarioId = button.getAttribute('data-usuario');
                var eventoId = button.getAttribute('data-evento');

                button.disabled = true;

                // AJAX request using XMLHttpRequest
                var xhr = new XMLHttpRequest();
                xhr.open('POST', '@Url.Action("MarcarAsistencia", "Evento")', true);
                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            var result = JSON.parse(xhr.responseText);
                            if (result.success) {
                                swal({ title: '', text: '¡Asistencia marcada con éxito!', type: 'success', customClass: 'swal-custom' });
                                updateTable(result.asistencia);
                            } else {
                                swal({ title: '', text: result.message, type: 'error', customClass: 'swal-custom' });
                                button.disabled = false;
                            }
                        } else {
                            swal({ title: '', text: 'Error al marcar asistencia', type: 'error', customClass: 'swal-custom' });
                            button.disabled = false;
                        }
                    }
                };

                xhr.send('idUsuario=' + encodeURIComponent(usuarioId) + '&idEvento=' + encodeURIComponent(eventoId));
            });
        });

        document.getElementById('search-nombre').addEventListener('input', filterTable);
        document.getElementById('search-cedula').addEventListener('input', filterTable);
        document.getElementById('search-estado').addEventListener('change', filterTable);

        document.getElementById('concluir-asistencia-button').addEventListener('click', function() {
            var eventoId = @Model.ID_Evento;

            // AJAX request using XMLHttpRequest
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '@Url.Action("ConcluirAsistencia", "Evento")', true);
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

            xhr.onreadystatechange = function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        var result = JSON.parse(xhr.responseText);
                        if (result.success) {
                            swal({ title: '', text: '¡Asistencia concluida con éxito!', type: 'success', customClass: 'swal-custom' });

                            // Hide "Concluir Asistencia" button
                            document.getElementById('concluir-asistencia-button').style.display = 'none';

                            // Update table
                            var rows = document.querySelectorAll('#asistencias-table-body tr');
                            rows.forEach(function(row) {
                                var statusBox = row.querySelector('.status-box');
                                var markButton = row.querySelector('.mark-attendance-button');
                                if (markButton && (!statusBox || statusBox.textContent !== 'Presente')) {
                                    markButton.style.display = 'none';
                                    var newStatusBox = document.createElement('span');
                                    newStatusBox.className = 'status-box status-gray';
                                    newStatusBox.textContent = 'Ausente';
                                    row.querySelector('td:nth-child(5)').appendChild(newStatusBox);
                                }
                            });


                        } else {
                            swal({ title: '', text: result.message, type: 'error', customClass: 'swal-custom' });
                        }
                    } else {
                        swal({ title: '', text: 'Error al concluir asistencia', type: 'error', customClass: 'swal-custom' });
                    }
                }
            };

            xhr.send('idEvento=' + encodeURIComponent(eventoId));
        });
    });

    function filterTable() {
        var nombreInput = document.getElementById('search-nombre').value.toLowerCase();
        var cedulaInput = document.getElementById('search-cedula').value.toLowerCase();
        var estadoInput = document.getElementById('search-estado').value;

        var rows = document.querySelectorAll('#asistencias-table-body tr');

        rows.forEach(function (row) {
            var nombre = row.children[1].textContent.toLowerCase();
            var cedula = row.children[0].textContent.toLowerCase();
            var estado = row.children[4].textContent.trim();

            var nombreMatch = nombre.includes(nombreInput);
            var cedulaMatch = cedula.includes(cedulaInput);
            var estadoMatch = (estadoInput === "" || (estadoInput === "Presente" && estado === "Presente") || (estadoInput === "Ausente" && estado !== "Presente"));

            if (nombreMatch && cedulaMatch && estadoMatch) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    function updateTable(asistencia) {
        if (!asistencia || !asistencia.Usuario) {
            console.error('Invalid asistencia object', asistencia);
            return;
        }

        var tbody = document.getElementById("asistencias-table-body");
        var rows = tbody.querySelectorAll("tr");
        var updatedRow;
        rows.forEach(function (row) {
            var cedula = row.querySelector("td:first-child").textContent;
            if (cedula === asistencia.Usuario.Cedula) {
                row.querySelector("td:nth-child(4)").textContent = new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: true });
                row.querySelector("td:nth-child(5)").innerHTML = '<span class="status-box status-green">Presente</span>';
                updatedRow = row;
            }
        });

        // Update present and absent counts
        var presentes = tbody.querySelectorAll('.status-box.status-green').length;
        var ausentes = tbody.querySelectorAll('.mark-attendance-button').length;

        document.querySelector(".status-indicators").innerHTML = `
            <span class="status-box status-green">Presentes: ${presentes}</span>
            <span class="status-box status-gray">Ausentes: ${ausentes}</span>
        `;


        
        if (presentes === @totalInvitaciones) {
            document.getElementById('concluir-asistencia-button').style.display = 'none';
        }
    }
</script>

<style>
    .table-sm {
        font-size: 0.875rem;
    }

    .status-box {
        display: inline-block;
        padding: 0.2em 0.6em;
        border-radius: 0.25em;
        color: white;
        margin-left: 10px;
    }

    .invitation-box {
        display: inline-block;
        padding: 0.2em 0.6em;
        border-radius: 0.25em;
        color: white;
        margin-left: 10px;
    }

    .status-gray {
        background-color: gray;
    }

    .status-green {
        background-color: mediumseagreen;
    }

    .status-red {
        background-color: crimson;
    }

    .card-body p {
        margin: 5px 0;
    }

    .text-center {
        text-align: center;
    }

    .spinner-border {
        width: 2rem;
        height: 2rem;
        border-width: 2px;
    }

    #sending-text {
        margin-left: 0.6rem;
        padding-bottom: 0.8rem;
        font-size: 1rem;
        vertical-align: middle;
        color: grey
    }

    .status-indicators {
        display: flex;
        align-items: center;
        font-size: 14px;
    }
</style>
